

HI-TECH Software PIC LITE Macro Assembler V1.00 build 12136 
                                                                                               Wed Jun 27 12:59:37 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 20 "Source Code PR6.c"
    43                           psect config,class=CONFIG,delta=2 ;# 
    44                           # 20 "Source Code PR6.c"
    45  2007  3F32               dw 0x3F32 ;# 
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_receive
    48                           	FNCALL	_main,_display
    49                           	FNROOT	_main
    50                           	global	_a
    51                           psect	nvCOMMON,class=COMMON,space=1
    52                           global __pnvCOMMON
    53  0072                     __pnvCOMMON:
    54  0072                     _a:
    55  0072                            ds      1
    56                           
    57                           	global	_PORTD
    58  0008                     _PORTD	set	0x8
    59                           	global	_RCREG
    60  001A                     _RCREG	set	0x1A
    61                           	global	_TXREG
    62  0019                     _TXREG	set	0x19
    63                           	global	_CREN
    64  00C4                     _CREN	set	0xC4
    65                           	global	_RCIF
    66  0065                     _RCIF	set	0x65
    67                           	global	_SPEN
    68  00C7                     _SPEN	set	0xC7
    69                           	global	_TXIF
    70  0064                     _TXIF	set	0x64
    71                           	global	_SPBRG
    72  0099                     _SPBRG	set	0x99
    73                           	global	_TRISD
    74  0088                     _TRISD	set	0x88
    75                           	global	_BRGH
    76  04C2                     _BRGH	set	0x4C2
    77                           	global	_TXEN
    78  04C5                     _TXEN	set	0x4C5
    79                           	file	"C:\Users\HATAKE~1\AppData\Local\Temp\s1hco."
    80                           	line	#
    81                           psect cinit,class=CODE,delta=2
    82                           global start_initialization
    83  06C4                     start_initialization:
    84                           
    85                           psect cinit,class=CODE,delta=2,merge=1
    86                           global end_of_initialization
    87                           
    88                           ;End of C runtime variable initialization code
    89                           
    90  06C4                     end_of_initialization:
    91  06C4  0183               clrf status
    92  06C5  120A  118A  2EF4   ljmp _main	;jump to C main() function
    93                           psect	cstackCOMMON,class=COMMON,space=1
    94                           global __pcstackCOMMON
    95  0070                     __pcstackCOMMON:
    96                           	global	?_init
    97  0070                     ?_init:	; 0 bytes @ 0x0
    98                           	global	??_init
    99  0070                     ??_init:	; 0 bytes @ 0x0
   100                           	global	?_display
   101  0070                     ?_display:	; 0 bytes @ 0x0
   102                           	global	??_display
   103  0070                     ??_display:	; 0 bytes @ 0x0
   104                           	global	??_receive
   105  0070                     ??_receive:	; 0 bytes @ 0x0
   106                           	global	?_main
   107  0070                     ?_main:	; 0 bytes @ 0x0
   108                           	global	?_receive
   109  0070                     ?_receive:	; 1 bytes @ 0x0
   110                           	global	display@c
   111  0070                     display@c:	; 1 bytes @ 0x0
   112  0070                     	ds	1
   113                           	global	??_main
   114  0071                     ??_main:	; 0 bytes @ 0x1
   115  0071                     	ds	1
   116                           ;!
   117                           ;!Data Sizes:
   118                           ;!    Strings     0
   119                           ;!    Constant    0
   120                           ;!    Data        0
   121                           ;!    BSS         0
   122                           ;!    Persistent  1
   123                           ;!    Stack       0
   124                           ;!
   125                           ;!Auto Spaces:
   126                           ;!    Space          Size  Autos    Used
   127                           ;!    COMMON           14      2       3
   128                           ;!    BANK0            80      0       0
   129                           ;!    BANK1            80      0       0
   130                           ;!    BANK3            96      0       0
   131                           ;!    BANK2            96      0       0
   132                           
   133                           ;!
   134                           ;!Pointer List with Targets:
   135                           ;!
   136                           ;!    None.
   137                           
   138                           
   139                           ;!
   140                           ;!Critical Paths under _main in COMMON
   141                           ;!
   142                           ;!    _main->_receive
   143                           ;!    _main->_display
   144                           ;!
   145                           ;!Critical Paths under _main in BANK0
   146                           ;!
   147                           ;!    None.
   148                           ;!
   149                           ;!Critical Paths under _main in BANK1
   150                           ;!
   151                           ;!    None.
   152                           ;!
   153                           ;!Critical Paths under _main in BANK3
   154                           ;!
   155                           ;!    None.
   156                           ;!
   157                           ;!Critical Paths under _main in BANK2
   158                           ;!
   159                           ;!    None.
   160                           
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   163 ;;
   164                           
   165                           ;!
   166                           ;!Call Graph Tables:
   167                           ;!
   168                           ;! ---------------------------------------------------------------------------------
   169                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   170                           ;! ---------------------------------------------------------------------------------
   171                           ;! (0) _main                                                 1     1      0      15
   172                           ;!                                              1 COMMON     1     1      0
   173                           ;!                               _init
   174                           ;!                            _receive
   175                           ;!                            _display
   176                           ;! ---------------------------------------------------------------------------------
   177                           ;! (1) _init                                                 0     0      0       0
   178                           ;! ---------------------------------------------------------------------------------
   179                           ;! (1) _display                                              1     1      0      15
   180                           ;!                                              0 COMMON     1     1      0
   181                           ;! ---------------------------------------------------------------------------------
   182                           ;! (1) _receive                                              1     1      0       0
   183                           ;!                                              0 COMMON     1     1      0
   184                           ;! ---------------------------------------------------------------------------------
   185                           ;! Estimated maximum stack depth 1
   186                           ;! ---------------------------------------------------------------------------------
   187                           ;!
   188                           ;! Call Graph Graphs:
   189                           ;!
   190                           ;! _main (ROOT)
   191                           ;!   _init
   192                           ;!   _receive
   193                           ;!   _display
   194                           ;!
   195                           
   196                           ;! Address spaces:
   197                           
   198                           ;!Name               Size   Autos  Total    Cost      Usage
   199                           ;!BITCOMMON            E      0       0       0        0.0%
   200                           ;!EEDATA             100      0       0       0        0.0%
   201                           ;!NULL                 0      0       0       0        0.0%
   202                           ;!CODE                 0      0       0       0        0.0%
   203                           ;!COMMON               E      2       3       1       21.4%
   204                           ;!BITSFR0              0      0       0       1        0.0%
   205                           ;!SFR0                 0      0       0       1        0.0%
   206                           ;!BITSFR1              0      0       0       2        0.0%
   207                           ;!SFR1                 0      0       0       2        0.0%
   208                           ;!STACK                0      0       1       2        0.0%
   209                           ;!ABS                  0      0       3       3        0.0%
   210                           ;!BITBANK0            50      0       0       4        0.0%
   211                           ;!BITSFR3              0      0       0       4        0.0%
   212                           ;!SFR3                 0      0       0       4        0.0%
   213                           ;!BANK0               50      0       0       5        0.0%
   214                           ;!BITSFR2              0      0       0       5        0.0%
   215                           ;!SFR2                 0      0       0       5        0.0%
   216                           ;!BITBANK1            50      0       0       6        0.0%
   217                           ;!BANK1               50      0       0       7        0.0%
   218                           ;!BITBANK3            60      0       0       8        0.0%
   219                           ;!BANK3               60      0       0       9        0.0%
   220                           ;!BITBANK2            60      0       0      10        0.0%
   221                           ;!BANK2               60      0       0      11        0.0%
   222                           ;!DATA                 0      0       4      12        0.0%
   223                           
   224                           	global	_main
   225                           
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 66 in file "Source Code PR6.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;		None               void
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : 17F/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          1       0       0       0       0
   245 ;;      Totals:         1       0       0       0       0
   246 ;;Total ram usage:        1 bytes
   247 ;; Hardware stack levels required when called:    1
   248 ;; This function calls:
   249 ;;		_init
   250 ;;		_receive
   251 ;;		_display
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           psect	maintext,global,class=CODE,delta=2,split=1
   257                           global __pmaintext
   258  06F4                     __pmaintext:
   259                           psect	maintext
   260                           	file	"Source Code PR6.c"
   261                           	line	66
   262                           	global	__size_of_main
   263  010C                     	__size_of_main	equ	__end_of_main-_main
   264                           	
   265  06F4                     _main:	
   266                           	opt	stack 7
   267                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   268                           	line	67
   269                           	
   270  06F4                     l534:	
   271                           ;Source Code PR6.c: 67: init();
   272  06F4  120A  118A  26E3   	fcall	_init
              120A  118A         
   273  06F9  2EFA               	goto	l536
   274                           	line	69
   275                           ;Source Code PR6.c: 69: while(1)
   276                           	
   277  06FA                     l42:	
   278                           	line	71
   279                           	
   280  06FA                     l536:	
   281                           ;Source Code PR6.c: 70: {
   282                           ;Source Code PR6.c: 71: a = receive();
   283  06FA  120A  118A  26D4   	fcall	_receive
              120A  118A         
   284  06FF  00F1               	movwf	(??_main+0)+0
   285  0700  0871               	movf	(??_main+0)+0,w
   286  0701  00F2               	movwf	(_a)
   287                           	line	72
   288                           	
   289  0702                     l538:	
   290                           ;Source Code PR6.c: 72: if (a == 'o')
   291  0702  0872               	movf	(_a),w
   292  0703  3A6F               	xorlw	06Fh
   293  0704  1D03               	skipz
   294  0705  2F07               	goto	u31
   295  0706  2F08               	goto	u30
   296  0707                     u31:
   297  0707  2EFA               	goto	l536
   298  0708                     u30:
   299                           	line	74
   300                           	
   301  0708                     l540:	
   302                           ;Source Code PR6.c: 73: {
   303                           ;Source Code PR6.c: 74: a = receive();
   304  0708  120A  118A  26D4   	fcall	_receive
              120A  118A         
   305  070D  00F1               	movwf	(??_main+0)+0
   306  070E  0871               	movf	(??_main+0)+0,w
   307  070F  00F2               	movwf	(_a)
   308                           	line	75
   309                           	
   310  0710                     l542:	
   311                           ;Source Code PR6.c: 75: if (a == 'k') break;
   312  0710  0872               	movf	(_a),w
   313  0711  3A6B               	xorlw	06Bh
   314  0712  1D03               	skipz
   315  0713  2F15               	goto	u41
   316  0714  2F16               	goto	u40
   317  0715                     u41:
   318  0715  2EFA               	goto	l536
   319  0716                     u40:
   320  0716  2F1B               	goto	l546
   321                           	
   322  0717                     l544:	
   323  0717  2F1B               	goto	l546
   324                           	
   325  0718                     l44:	
   326  0718  2EFA               	goto	l536
   327                           	line	76
   328                           	
   329  0719                     l43:	
   330  0719  2EFA               	goto	l536
   331                           	line	77
   332                           	
   333  071A                     l46:	
   334                           	line	69
   335  071A  2EFA               	goto	l536
   336                           	
   337  071B                     l45:	
   338                           	line	80
   339                           	
   340  071B                     l546:	
   341                           ;Source Code PR6.c: 76: }
   342                           ;Source Code PR6.c: 77: }
   343                           ;Source Code PR6.c: 80: display('C');
   344  071B  3043               	movlw	(043h)
   345  071C  120A  118A  26C8   	fcall	_display
              120A  118A         
   346                           	line	81
   347                           ;Source Code PR6.c: 81: display('y');
   348  0721  3079               	movlw	(079h)
   349  0722  120A  118A  26C8   	fcall	_display
              120A  118A         
   350                           	line	82
   351                           ;Source Code PR6.c: 82: display('t');
   352  0727  3074               	movlw	(074h)
   353  0728  120A  118A  26C8   	fcall	_display
              120A  118A         
   354                           	line	83
   355                           ;Source Code PR6.c: 83: display('r');
   356  072D  3072               	movlw	(072h)
   357  072E  120A  118A  26C8   	fcall	_display
              120A  118A         
   358                           	line	84
   359                           ;Source Code PR6.c: 84: display('o');
   360  0733  306F               	movlw	(06Fh)
   361  0734  120A  118A  26C8   	fcall	_display
              120A  118A         
   362                           	line	85
   363                           ;Source Code PR6.c: 85: display('n');
   364  0739  306E               	movlw	(06Eh)
   365  073A  120A  118A  26C8   	fcall	_display
              120A  118A         
   366                           	line	86
   367                           ;Source Code PR6.c: 86: display(0x0a);
   368  073F  300A               	movlw	(0Ah)
   369  0740  120A  118A  26C8   	fcall	_display
              120A  118A         
   370                           	line	87
   371                           ;Source Code PR6.c: 87: display(0x0d);
   372  0745  300D               	movlw	(0Dh)
   373  0746  120A  118A  26C8   	fcall	_display
              120A  118A         
   374                           	line	88
   375                           ;Source Code PR6.c: 88: display('P');
   376  074B  3050               	movlw	(050h)
   377  074C  120A  118A  26C8   	fcall	_display
              120A  118A         
   378                           	line	89
   379                           ;Source Code PR6.c: 89: display('r');
   380  0751  3072               	movlw	(072h)
   381  0752  120A  118A  26C8   	fcall	_display
              120A  118A         
   382                           	line	90
   383                           ;Source Code PR6.c: 90: display('e');
   384  0757  3065               	movlw	(065h)
   385  0758  120A  118A  26C8   	fcall	_display
              120A  118A         
   386                           	line	91
   387                           ;Source Code PR6.c: 91: display('s');
   388  075D  3073               	movlw	(073h)
   389  075E  120A  118A  26C8   	fcall	_display
              120A  118A         
   390                           	line	92
   391                           ;Source Code PR6.c: 92: display('s');
   392  0763  3073               	movlw	(073h)
   393  0764  120A  118A  26C8   	fcall	_display
              120A  118A         
   394                           	line	93
   395                           ;Source Code PR6.c: 93: display(0x20);
   396  0769  3020               	movlw	(020h)
   397  076A  120A  118A  26C8   	fcall	_display
              120A  118A         
   398                           	line	94
   399                           ;Source Code PR6.c: 94: display('a');
   400  076F  3061               	movlw	(061h)
   401  0770  120A  118A  26C8   	fcall	_display
              120A  118A         
   402                           	line	95
   403                           ;Source Code PR6.c: 95: display('n');
   404  0775  306E               	movlw	(06Eh)
   405  0776  120A  118A  26C8   	fcall	_display
              120A  118A         
   406                           	line	96
   407                           ;Source Code PR6.c: 96: display('y');
   408  077B  3079               	movlw	(079h)
   409  077C  120A  118A  26C8   	fcall	_display
              120A  118A         
   410                           	line	97
   411                           ;Source Code PR6.c: 97: display(0x20);
   412  0781  3020               	movlw	(020h)
   413  0782  120A  118A  26C8   	fcall	_display
              120A  118A         
   414                           	line	98
   415                           ;Source Code PR6.c: 98: display('n');
   416  0787  306E               	movlw	(06Eh)
   417  0788  120A  118A  26C8   	fcall	_display
              120A  118A         
   418                           	line	99
   419                           ;Source Code PR6.c: 99: display('u');
   420  078D  3075               	movlw	(075h)
   421  078E  120A  118A  26C8   	fcall	_display
              120A  118A         
   422                           	line	100
   423                           ;Source Code PR6.c: 100: display('m');
   424  0793  306D               	movlw	(06Dh)
   425  0794  120A  118A  26C8   	fcall	_display
              120A  118A         
   426                           	line	101
   427                           ;Source Code PR6.c: 101: display('b');
   428  0799  3062               	movlw	(062h)
   429  079A  120A  118A  26C8   	fcall	_display
              120A  118A         
   430                           	line	102
   431                           ;Source Code PR6.c: 102: display('e');
   432  079F  3065               	movlw	(065h)
   433  07A0  120A  118A  26C8   	fcall	_display
              120A  118A         
   434                           	line	103
   435                           ;Source Code PR6.c: 103: display('r');
   436  07A5  3072               	movlw	(072h)
   437  07A6  120A  118A  26C8   	fcall	_display
              120A  118A         
   438                           	line	105
   439                           	
   440  07AB                     l548:	
   441                           ;Source Code PR6.c: 105: PORTD = 1;
   442  07AB  3001               	movlw	(01h)
   443  07AC  1283               	bcf	status, 5	;RP0=0, select bank0
   444  07AD  1303               	bcf	status, 6	;RP1=0, select bank0
   445  07AE  0088               	movwf	(8)	;volatile
   446  07AF  2FB0               	goto	l550
   447                           	line	109
   448                           ;Source Code PR6.c: 109: while(1)
   449                           	
   450  07B0                     l47:	
   451                           	line	111
   452                           	
   453  07B0                     l550:	
   454                           ;Source Code PR6.c: 110: {
   455                           ;Source Code PR6.c: 111: a = receive();
   456  07B0  120A  118A  26D4   	fcall	_receive
              120A  118A         
   457  07B5  00F1               	movwf	(??_main+0)+0
   458  07B6  0871               	movf	(??_main+0)+0,w
   459  07B7  00F2               	movwf	(_a)
   460                           	line	112
   461                           	
   462  07B8                     l552:	
   463                           ;Source Code PR6.c: 112: if (a=='1'||a=='2'||a=='3'||a=='4'||a=='5'||a=='6'||a=='7'||a==
                                 '8'||a=='9'||a=='0')
   464  07B8  0872               	movf	(_a),w
   465  07B9  3A31               	xorlw	031h
   466  07BA  1903               	skipnz
   467  07BB  2FBD               	goto	u51
   468  07BC  2FBE               	goto	u50
   469  07BD                     u51:
   470  07BD  2FF5               	goto	l572
   471  07BE                     u50:
   472                           	
   473  07BE                     l554:	
   474  07BE  0872               	movf	(_a),w
   475  07BF  3A32               	xorlw	032h
   476  07C0  1903               	skipnz
   477  07C1  2FC3               	goto	u61
   478  07C2  2FC4               	goto	u60
   479  07C3                     u61:
   480  07C3  2FF5               	goto	l572
   481  07C4                     u60:
   482                           	
   483  07C4                     l556:	
   484  07C4  0872               	movf	(_a),w
   485  07C5  3A33               	xorlw	033h
   486  07C6  1903               	skipnz
   487  07C7  2FC9               	goto	u71
   488  07C8  2FCA               	goto	u70
   489  07C9                     u71:
   490  07C9  2FF5               	goto	l572
   491  07CA                     u70:
   492                           	
   493  07CA                     l558:	
   494  07CA  0872               	movf	(_a),w
   495  07CB  3A34               	xorlw	034h
   496  07CC  1903               	skipnz
   497  07CD  2FCF               	goto	u81
   498  07CE  2FD0               	goto	u80
   499  07CF                     u81:
   500  07CF  2FF5               	goto	l572
   501  07D0                     u80:
   502                           	
   503  07D0                     l560:	
   504  07D0  0872               	movf	(_a),w
   505  07D1  3A35               	xorlw	035h
   506  07D2  1903               	skipnz
   507  07D3  2FD5               	goto	u91
   508  07D4  2FD6               	goto	u90
   509  07D5                     u91:
   510  07D5  2FF5               	goto	l572
   511  07D6                     u90:
   512                           	
   513  07D6                     l562:	
   514  07D6  0872               	movf	(_a),w
   515  07D7  3A36               	xorlw	036h
   516  07D8  1903               	skipnz
   517  07D9  2FDB               	goto	u101
   518  07DA  2FDC               	goto	u100
   519  07DB                     u101:
   520  07DB  2FF5               	goto	l572
   521  07DC                     u100:
   522                           	
   523  07DC                     l564:	
   524  07DC  0872               	movf	(_a),w
   525  07DD  3A37               	xorlw	037h
   526  07DE  1903               	skipnz
   527  07DF  2FE1               	goto	u111
   528  07E0  2FE2               	goto	u110
   529  07E1                     u111:
   530  07E1  2FF5               	goto	l572
   531  07E2                     u110:
   532                           	
   533  07E2                     l566:	
   534  07E2  0872               	movf	(_a),w
   535  07E3  3A38               	xorlw	038h
   536  07E4  1903               	skipnz
   537  07E5  2FE7               	goto	u121
   538  07E6  2FE8               	goto	u120
   539  07E7                     u121:
   540  07E7  2FF5               	goto	l572
   541  07E8                     u120:
   542                           	
   543  07E8                     l568:	
   544  07E8  0872               	movf	(_a),w
   545  07E9  3A39               	xorlw	039h
   546  07EA  1903               	skipnz
   547  07EB  2FED               	goto	u131
   548  07EC  2FEE               	goto	u130
   549  07ED                     u131:
   550  07ED  2FF5               	goto	l572
   551  07EE                     u130:
   552                           	
   553  07EE                     l570:	
   554  07EE  0872               	movf	(_a),w
   555  07EF  3A30               	xorlw	030h
   556  07F0  1D03               	skipz
   557  07F1  2FF3               	goto	u141
   558  07F2  2FF4               	goto	u140
   559  07F3                     u141:
   560  07F3  2FB0               	goto	l550
   561  07F4                     u140:
   562  07F4  2FF5               	goto	l572
   563                           	
   564  07F5                     l50:	
   565                           	line	114
   566                           	
   567  07F5                     l572:	
   568                           ;Source Code PR6.c: 113: {
   569                           ;Source Code PR6.c: 114: PORTD = a-0x30;
   570  07F5  0872               	movf	(_a),w
   571  07F6  3ED0               	addlw	0D0h
   572  07F7  1283               	bcf	status, 5	;RP0=0, select bank0
   573  07F8  1303               	bcf	status, 6	;RP1=0, select bank0
   574  07F9  0088               	movwf	(8)	;volatile
   575  07FA  2FB0               	goto	l550
   576                           	line	115
   577                           	
   578  07FB                     l48:	
   579  07FB  2FB0               	goto	l550
   580                           	line	116
   581                           	
   582  07FC                     l51:	
   583                           	line	109
   584  07FC  2FB0               	goto	l550
   585                           	
   586  07FD                     l52:	
   587                           	line	117
   588                           	
   589  07FD                     l53:	
   590                           	global	start
   591  07FD  120A  118A  2800   	ljmp	start
   592                           	opt stack 0
   593                           GLOBAL	__end_of_main
   594  0800                     	__end_of_main:
   595                           	signat	_main,88
   596                           	global	_init
   597                           
   598 ;; *************** function _init *****************
   599 ;; Defined at:
   600 ;;		line 37 in file "Source Code PR6.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;		None               void
   607 ;; Registers used:
   608 ;;		wreg, status,2
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           psect	text49,local,class=CODE,delta=2,merge=1
   627                           global __ptext49
   628  06E3                     __ptext49:
   629                           psect	text49
   630                           	file	"Source Code PR6.c"
   631                           	line	37
   632                           	global	__size_of_init
   633  0011                     	__size_of_init	equ	__end_of_init-_init
   634                           	
   635  06E3                     _init:	
   636                           	opt	stack 7
   637                           ; Regs used in _init: [wreg+status,2]
   638                           	line	38
   639                           	
   640  06E3                     l510:	
   641                           ;Source Code PR6.c: 38: SPBRG=0x0A;
   642  06E3  300A               	movlw	(0Ah)
   643  06E4  1683               	bsf	status, 5	;RP0=1, select bank1
   644  06E5  1303               	bcf	status, 6	;RP1=0, select bank1
   645  06E6  0099               	movwf	(153)^080h	;volatile
   646                           	line	39
   647                           	
   648  06E7                     l512:	
   649                           ;Source Code PR6.c: 39: BRGH=1;
   650  06E7  1518               	bsf	(1218/8)^080h,(1218)&7	;volatile
   651                           	line	40
   652                           	
   653  06E8                     l514:	
   654                           ;Source Code PR6.c: 40: TXEN=1;
   655  06E8  1698               	bsf	(1221/8)^080h,(1221)&7	;volatile
   656                           	line	41
   657                           	
   658  06E9                     l516:	
   659                           ;Source Code PR6.c: 41: CREN=1;
   660  06E9  1283               	bcf	status, 5	;RP0=0, select bank0
   661  06EA  1303               	bcf	status, 6	;RP1=0, select bank0
   662  06EB  1618               	bsf	(196/8),(196)&7	;volatile
   663                           	line	42
   664                           	
   665  06EC                     l518:	
   666                           ;Source Code PR6.c: 42: SPEN=1;
   667  06EC  1798               	bsf	(199/8),(199)&7	;volatile
   668                           	line	43
   669                           	
   670  06ED                     l520:	
   671                           ;Source Code PR6.c: 43: TRISD = 0b00000000;
   672  06ED  1683               	bsf	status, 5	;RP0=1, select bank1
   673  06EE  1303               	bcf	status, 6	;RP1=0, select bank1
   674  06EF  0188               	clrf	(136)^080h	;volatile
   675                           	line	44
   676                           	
   677  06F0                     l522:	
   678                           ;Source Code PR6.c: 44: PORTD = 0b00000000;
   679  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
   680  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
   681  06F2  0188               	clrf	(8)	;volatile
   682                           	line	45
   683                           	
   684  06F3                     l27:	
   685  06F3  0008               	return
   686                           	opt stack 0
   687                           GLOBAL	__end_of_init
   688  06F4                     	__end_of_init:
   689                           	signat	_init,88
   690                           	global	_display
   691                           
   692 ;; *************** function _display *****************
   693 ;; Defined at:
   694 ;;		line 48 in file "Source Code PR6.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  c               1    wreg     unsigned char 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  c               1    0[COMMON] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         1       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0
   711 ;;      Totals:         1       0       0       0       0
   712 ;;Total ram usage:        1 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           psect	text50,local,class=CODE,delta=2,merge=1
   721                           global __ptext50
   722  06C8                     __ptext50:
   723                           psect	text50
   724                           	file	"Source Code PR6.c"
   725                           	line	48
   726                           	global	__size_of_display
   727  000C                     	__size_of_display	equ	__end_of_display-_display
   728                           	
   729  06C8                     _display:	
   730                           	opt	stack 7
   731                           ; Regs used in _display: [wreg]
   732                           ;display@c stored from wreg
   733  06C8  00F0               	movwf	(display@c)
   734                           	line	49
   735                           	
   736  06C9                     l524:	
   737                           ;Source Code PR6.c: 49: while (TXIF == 0);
   738  06C9  2ECA               	goto	l30
   739                           	
   740  06CA                     l31:	
   741                           	
   742  06CA                     l30:	
   743  06CA  1283               	bcf	status, 5	;RP0=0, select bank0
   744  06CB  1303               	bcf	status, 6	;RP1=0, select bank0
   745  06CC  1E0C               	btfss	(100/8),(100)&7	;volatile
   746  06CD  2ECF               	goto	u11
   747  06CE  2ED0               	goto	u10
   748  06CF                     u11:
   749  06CF  2ECA               	goto	l30
   750  06D0                     u10:
   751  06D0  2ED1               	goto	l526
   752                           	
   753  06D1                     l32:	
   754                           	line	50
   755                           	
   756  06D1                     l526:	
   757                           ;Source Code PR6.c: 50: TXREG = c;
   758  06D1  0870               	movf	(display@c),w
   759  06D2  0099               	movwf	(25)	;volatile
   760                           	line	51
   761                           	
   762  06D3                     l33:	
   763  06D3  0008               	return
   764                           	opt stack 0
   765                           GLOBAL	__end_of_display
   766  06D4                     	__end_of_display:
   767                           	signat	_display,4216
   768                           	global	_receive
   769                           
   770 ;; *************** function _receive *****************
   771 ;; Defined at:
   772 ;;		line 54 in file "Source Code PR6.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      unsigned char 
   779 ;; Registers used:
   780 ;;		wreg
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0
   788 ;;      Temps:          1       0       0       0       0
   789 ;;      Totals:         1       0       0       0       0
   790 ;;Total ram usage:        1 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           psect	text51,local,class=CODE,delta=2,merge=1
   799                           global __ptext51
   800  06D4                     __ptext51:
   801                           psect	text51
   802                           	file	"Source Code PR6.c"
   803                           	line	54
   804                           	global	__size_of_receive
   805  000F                     	__size_of_receive	equ	__end_of_receive-_receive
   806                           	
   807  06D4                     _receive:	
   808                           	opt	stack 7
   809                           ; Regs used in _receive: [wreg]
   810                           	line	55
   811                           	
   812  06D4                     l528:	
   813                           ;Source Code PR6.c: 55: while (RCIF == 0);
   814  06D4  2ED5               	goto	l36
   815                           	
   816  06D5                     l37:	
   817                           	
   818  06D5                     l36:	
   819  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
   820  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
   821  06D7  1E8C               	btfss	(101/8),(101)&7	;volatile
   822  06D8  2EDA               	goto	u21
   823  06D9  2EDB               	goto	u20
   824  06DA                     u21:
   825  06DA  2ED5               	goto	l36
   826  06DB                     u20:
   827  06DB  2EDC               	goto	l530
   828                           	
   829  06DC                     l38:	
   830                           	line	56
   831                           	
   832  06DC                     l530:	
   833                           ;Source Code PR6.c: 56: a = RCREG;
   834  06DC  081A               	movf	(26),w	;volatile
   835  06DD  00F0               	movwf	(??_receive+0)+0
   836  06DE  0870               	movf	(??_receive+0)+0,w
   837  06DF  00F2               	movwf	(_a)
   838                           	line	57
   839                           ;Source Code PR6.c: 57: return a;
   840  06E0  0872               	movf	(_a),w
   841  06E1  2EE2               	goto	l39
   842                           	
   843  06E2                     l532:	
   844                           	line	58
   845                           	
   846  06E2                     l39:	
   847  06E2  0008               	return
   848                           	opt stack 0
   849                           GLOBAL	__end_of_receive
   850  06E3                     	__end_of_receive:
   851                           	signat	_receive,89
   852                           psect	text52,local,class=CODE,delta=2,merge=1
   853                           global __ptext52
   854  0000                     __ptext52:
   855                           	global	btemp
   856  007E                     	btemp set 07Eh
   857                           
   858                           	DABS	1,126,2	;btemp
   859                           	global	wtemp0
   860  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_receive
    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              1 COMMON     1     1      0
                               _init
                            _receive
                            _display
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _receive                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _receive
   _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       1       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


HI-TECH Software PICC Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Wed Jun 27 12:59:37 2012

                   _a 0072                    l30 06CA                    l31 06CA                    l32 06D1  
                  l33 06D3                    l50 07F5                    l42 06FA                    l27 06F3  
                  l51 07FC                    l43 0719                    l36 06D5                    l52 07FD  
                  l44 0718                    l37 06D5                    l53 07FD                    l45 071B  
                  l38 06DC                    l46 071A                    l39 06E2                    l47 07B0  
                  l48 07FB                    u10 06D0                    u11 06CF                    u20 06DB  
                  u21 06DA                    u30 0708                    u31 0707                    u40 0716  
                  u41 0715                    u50 07BE                    u51 07BD                    u60 07C4  
                  u61 07C3                    u70 07CA                    u71 07C9                    u80 07D0  
                  u81 07CF                    u90 07D6                    u91 07D5                   l510 06E3  
                 l520 06ED                   l512 06E7                   l530 06DC                   l522 06F0  
                 l514 06E8                   l532 06E2                   l524 06C9                   l516 06E9  
                 l540 0708                   l526 06D1                   l518 06EC                   l550 07B0  
                 l542 0710                   l534 06F4                   l528 06D4                   l560 07D0  
                 l552 07B8                   l544 0717                   l536 06FA                   l570 07EE  
                 l562 07D6                   l554 07BE                   l546 071B                   l538 0702  
                 l564 07DC                   l556 07C4                   l572 07F5                   l548 07AB  
                 l566 07E2                   l558 07CA                   l568 07E8                   u100 07DC  
                 u101 07DB                   u110 07E2                   u111 07E1                   u120 07E8  
                 u121 07E7                   u130 07EE                   u131 07ED                   u140 07F4  
                 u141 07F3                  _BRGH 04C2                  _CREN 00C4                  _RCIF 0065  
                _SPEN 00C7                  _TXEN 04C5                  _TXIF 0064                  _main 06F4  
                _init 06E3                  btemp 007E                  start 0000                 ?_main 0070  
               ?_init 0070                 _RCREG 001A                 _SPBRG 0099                 _PORTD 0008  
               _TRISD 0088                 _TXREG 0019       __end_of_display 06D4       __end_of_receive 06E3  
               status 0003                 wtemp0 007E          __end_of_main 0800          __end_of_init 06F4  
              ??_main 0071                ??_init 0070             ??_display 0070             ??_receive 0070  
      __pcstackCOMMON 0070            __pnvCOMMON 0072            __pmaintext 06F4               _display 06C8  
             _receive 06D4  end_of_initialization 06C4   start_initialization 06C4              ?_display 0070  
            ?_receive 0070      __size_of_display 000C      __size_of_receive 000F              __ptext50 06C8  
            __ptext51 06D4              __ptext52 0000              __ptext49 06E3         __size_of_main 010C  
       __size_of_init 0011              display@c 0070  
