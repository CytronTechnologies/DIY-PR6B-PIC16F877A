

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 21 16:54:19 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0007                     	;# 
    20  0008                     	;# 
    21  0009                     	;# 
    22  000A                     	;# 
    23  000B                     	;# 
    24  000C                     	;# 
    25  000D                     	;# 
    26  000E                     	;# 
    27  000E                     	;# 
    28  000F                     	;# 
    29  0010                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0013                     	;# 
    33  0014                     	;# 
    34  0015                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001B                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001D                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  0081                     	;# 
    48  0085                     	;# 
    49  0086                     	;# 
    50  0087                     	;# 
    51  0088                     	;# 
    52  0089                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0094                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  009F                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  010E                     	;# 
    69  010F                     	;# 
    70  018C                     	;# 
    71  018D                     	;# 
    72                           
    73                           	psect	nvCOMMON
    74  0072                     __pnvCOMMON:	
    75  0072                     _a:	
    76  0072                     	ds	1
    77  0008                     _PORTD	set	8
    78  001A                     _RCREG	set	26
    79  0019                     _TXREG	set	25
    80  00C4                     _CREN	set	196
    81  0065                     _RCIF	set	101
    82  00C7                     _SPEN	set	199
    83  0064                     _TXIF	set	100
    84  0099                     _SPBRG	set	153
    85  0088                     _TRISD	set	136
    86  04C2                     _BRGH	set	1218
    87  04C5                     _TXEN	set	1221
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  07FC                     start_initialization:	
    93  07FC                     __initialization:	
    94  07FC                     end_of_initialization:	
    95                           ;End of C runtime variable initialization code
    96                           
    97  07FC                     __end_of__initialization:	
    98  07FC  0183               	clrf	3
    99  07FD  120A  118A  2F17   	ljmp	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMMON
   102  0070                     __pcstackCOMMON:	
   103  0070                     ?_init:	
   104  0070                     ??_init:	
   105                           ; 0 bytes @ 0x0
   106                           
   107  0070                     ?_display:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0070                     ??_display:	
   111                           ; 0 bytes @ 0x0
   112                           
   113  0070                     ??_receive:	
   114                           ; 0 bytes @ 0x0
   115                           
   116  0070                     ?_main:	
   117                           ; 0 bytes @ 0x0
   118                           
   119  0070                     ?_receive:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0070                     display@c:	
   123                           ; 1 bytes @ 0x0
   124                           
   125                           
   126                           ; 1 bytes @ 0x0
   127  0070                     	ds	1
   128  0071                     ??_main:	
   129                           
   130                           ; 0 bytes @ 0x1
   131  0071                     	ds	1
   132                           
   133                           	psect	maintext
   134  0717                     __pmaintext:	
   135 ;;
   136 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   137 ;;
   138 ;; *************** function _main *****************
   139 ;; Defined at:
   140 ;;		line 80 in file "../../Source file/Source Code PR6B.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;		None
   145 ;; Return value:  Size  Location     Type
   146 ;;		None               void
   147 ;; Registers used:
   148 ;;		wreg, status,2, status,0, pclath, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : B00/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   154 ;;      Params:         0       0       0       0       0
   155 ;;      Locals:         0       0       0       0       0
   156 ;;      Temps:          1       0       0       0       0
   157 ;;      Totals:         1       0       0       0       0
   158 ;;Total ram usage:        1 bytes
   159 ;; Hardware stack levels required when called:    1
   160 ;; This function calls:
   161 ;;		_display
   162 ;;		_init
   163 ;;		_receive
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           
   170                           ;psect for function _main
   171  0717                     _main:	
   172                           
   173                           ;Source Code PR6B.c: 82: init();
   174                           
   175                           ;incstack = 0
   176                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   177  0717  120A  118A  2706  120A  118A  	fcall	_init
   178  071C                     l539:	
   179                           ;Source Code PR6B.c: 84: while(1)
   180                           
   181                           
   182                           ;Source Code PR6B.c: 85: {
   183                           ;Source Code PR6B.c: 86: a = receive();
   184  071C  120A  118A  26FC  120A  118A  	fcall	_receive
   185  0721  00F1               	movwf	??_main
   186  0722  0871               	movf	??_main,w
   187  0723  00F2               	movwf	_a
   188                           
   189                           ;Source Code PR6B.c: 87: if (a == 'o')
   190  0724  306F               	movlw	111
   191  0725  0672               	xorwf	_a,w
   192  0726  1D03               	btfss	3,2
   193  0727  2F1C               	goto	l539
   194                           
   195                           ;Source Code PR6B.c: 88: {
   196                           ;Source Code PR6B.c: 89: a = receive();
   197  0728  120A  118A  26FC  120A  118A  	fcall	_receive
   198  072D  00F1               	movwf	??_main
   199  072E  0871               	movf	??_main,w
   200  072F  00F2               	movwf	_a
   201                           
   202                           ;Source Code PR6B.c: 90: if (a == 'k') break;
   203  0730  306B               	movlw	107
   204  0731  0672               	xorwf	_a,w
   205  0732  1D03               	btfss	3,2
   206  0733  2F1C               	goto	l539
   207                           
   208                           ;Source Code PR6B.c: 91: }
   209                           ;Source Code PR6B.c: 92: }
   210                           ;Source Code PR6B.c: 95: display('C');
   211  0734  3043               	movlw	67
   212  0735  120A  118A  26F4  120A  118A  	fcall	_display
   213                           
   214                           ;Source Code PR6B.c: 96: display('y');
   215  073A  3079               	movlw	121
   216  073B  120A  118A  26F4  120A  118A  	fcall	_display
   217                           
   218                           ;Source Code PR6B.c: 97: display('t');
   219  0740  3074               	movlw	116
   220  0741  120A  118A  26F4  120A  118A  	fcall	_display
   221                           
   222                           ;Source Code PR6B.c: 98: display('r');
   223  0746  3072               	movlw	114
   224  0747  120A  118A  26F4  120A  118A  	fcall	_display
   225                           
   226                           ;Source Code PR6B.c: 99: display('o');
   227  074C  306F               	movlw	111
   228  074D  120A  118A  26F4  120A  118A  	fcall	_display
   229                           
   230                           ;Source Code PR6B.c: 100: display('n');
   231  0752  306E               	movlw	110
   232  0753  120A  118A  26F4  120A  118A  	fcall	_display
   233                           
   234                           ;Source Code PR6B.c: 101: display(0x0a);
   235  0758  300A               	movlw	10
   236  0759  120A  118A  26F4  120A  118A  	fcall	_display
   237                           
   238                           ;Source Code PR6B.c: 102: display(0x0d);
   239  075E  300D               	movlw	13
   240  075F  120A  118A  26F4  120A  118A  	fcall	_display
   241                           
   242                           ;Source Code PR6B.c: 103: display('P');
   243  0764  3050               	movlw	80
   244  0765  120A  118A  26F4  120A  118A  	fcall	_display
   245                           
   246                           ;Source Code PR6B.c: 104: display('r');
   247  076A  3072               	movlw	114
   248  076B  120A  118A  26F4  120A  118A  	fcall	_display
   249                           
   250                           ;Source Code PR6B.c: 105: display('e');
   251  0770  3065               	movlw	101
   252  0771  120A  118A  26F4  120A  118A  	fcall	_display
   253                           
   254                           ;Source Code PR6B.c: 106: display('s');
   255  0776  3073               	movlw	115
   256  0777  120A  118A  26F4  120A  118A  	fcall	_display
   257                           
   258                           ;Source Code PR6B.c: 107: display('s');
   259  077C  3073               	movlw	115
   260  077D  120A  118A  26F4  120A  118A  	fcall	_display
   261                           
   262                           ;Source Code PR6B.c: 108: display(0x20);
   263  0782  3020               	movlw	32
   264  0783  120A  118A  26F4  120A  118A  	fcall	_display
   265                           
   266                           ;Source Code PR6B.c: 109: display('a');
   267  0788  3061               	movlw	97
   268  0789  120A  118A  26F4  120A  118A  	fcall	_display
   269                           
   270                           ;Source Code PR6B.c: 110: display('n');
   271  078E  306E               	movlw	110
   272  078F  120A  118A  26F4  120A  118A  	fcall	_display
   273                           
   274                           ;Source Code PR6B.c: 111: display('y');
   275  0794  3079               	movlw	121
   276  0795  120A  118A  26F4  120A  118A  	fcall	_display
   277                           
   278                           ;Source Code PR6B.c: 112: display(0x20);
   279  079A  3020               	movlw	32
   280  079B  120A  118A  26F4  120A  118A  	fcall	_display
   281                           
   282                           ;Source Code PR6B.c: 113: display('n');
   283  07A0  306E               	movlw	110
   284  07A1  120A  118A  26F4  120A  118A  	fcall	_display
   285                           
   286                           ;Source Code PR6B.c: 114: display('u');
   287  07A6  3075               	movlw	117
   288  07A7  120A  118A  26F4  120A  118A  	fcall	_display
   289                           
   290                           ;Source Code PR6B.c: 115: display('m');
   291  07AC  306D               	movlw	109
   292  07AD  120A  118A  26F4  120A  118A  	fcall	_display
   293                           
   294                           ;Source Code PR6B.c: 116: display('b');
   295  07B2  3062               	movlw	98
   296  07B3  120A  118A  26F4  120A  118A  	fcall	_display
   297                           
   298                           ;Source Code PR6B.c: 117: display('e');
   299  07B8  3065               	movlw	101
   300  07B9  120A  118A  26F4  120A  118A  	fcall	_display
   301                           
   302                           ;Source Code PR6B.c: 118: display('r');
   303  07BE  3072               	movlw	114
   304  07BF  120A  118A  26F4  120A  118A  	fcall	_display
   305                           
   306                           ;Source Code PR6B.c: 120: PORTD = 1;
   307  07C4  3001               	movlw	1
   308  07C5  2FF8               	goto	L1
   309  07C6                     l555:	
   310  07C6  3032               	movlw	50
   311  07C7  0672               	xorwf	_a,w
   312  07C8  1903               	btfsc	3,2
   313  07C9  2FF6               	goto	l573
   314  07CA  3033               	movlw	51
   315  07CB  0672               	xorwf	_a,w
   316  07CC  1903               	btfsc	3,2
   317  07CD  2FF6               	goto	l573
   318  07CE  3034               	movlw	52
   319  07CF  0672               	xorwf	_a,w
   320  07D0  1903               	btfsc	3,2
   321  07D1  2FF6               	goto	l573
   322  07D2  3035               	movlw	53
   323  07D3  0672               	xorwf	_a,w
   324  07D4  1903               	btfsc	3,2
   325  07D5  2FF6               	goto	l573
   326  07D6  3036               	movlw	54
   327  07D7  0672               	xorwf	_a,w
   328  07D8  1903               	btfsc	3,2
   329  07D9  2FF6               	goto	l573
   330  07DA  3037               	movlw	55
   331  07DB  0672               	xorwf	_a,w
   332  07DC  1903               	btfsc	3,2
   333  07DD  2FF6               	goto	l573
   334  07DE  3038               	movlw	56
   335  07DF  0672               	xorwf	_a,w
   336  07E0  1903               	btfsc	3,2
   337  07E1  2FF6               	goto	l573
   338  07E2  3039               	movlw	57
   339  07E3  0672               	xorwf	_a,w
   340  07E4  1903               	btfsc	3,2
   341  07E5  2FF6               	goto	l573
   342  07E6  3030               	movlw	48
   343  07E7  0672               	xorwf	_a,w
   344  07E8  1903               	btfsc	3,2
   345  07E9  2FF6               	goto	l573
   346  07EA                     l553:	
   347                           ;Source Code PR6B.c: 124: while(1)
   348                           
   349                           
   350                           ;Source Code PR6B.c: 125: {
   351                           ;Source Code PR6B.c: 126: a = receive();
   352  07EA  120A  118A  26FC  120A  118A  	fcall	_receive
   353  07EF  00F1               	movwf	??_main
   354  07F0  0871               	movf	??_main,w
   355  07F1  00F2               	movwf	_a
   356                           
   357                           ;Source Code PR6B.c: 127: if (a=='1'||a=='2'||a=='3'||a=='4'||a=='5'||a=='6'||a=='7'||a=
      +                          ='8'||a=='9'||a=='0')
   358  07F2  3031               	movlw	49
   359  07F3  0672               	xorwf	_a,w
   360  07F4  1D03               	btfss	3,2
   361  07F5  2FC6               	goto	l555
   362  07F6                     l573:	
   363                           
   364                           ;Source Code PR6B.c: 128: {
   365                           ;Source Code PR6B.c: 129: PORTD = a-0x30;
   366  07F6  0872               	movf	_a,w
   367  07F7  3ED0               	addlw	208
   368  07F8                     L1:	
   369  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   370  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   371  07FA  0088               	movwf	8	;volatile
   372  07FB  2FEA               	goto	l553
   373  07FC                     __end_of_main:	
   374                           
   375                           	psect	text1
   376  06FC                     __ptext1:	
   377 ;; *************** function _receive *****************
   378 ;; Defined at:
   379 ;;		line 68 in file "../../Source file/Source Code PR6B.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      unsigned char 
   386 ;; Registers used:
   387 ;;		wreg
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          1       0       0       0       0
   396 ;;      Totals:         1       0       0       0       0
   397 ;;Total ram usage:        1 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _receive
   408  06FC                     _receive:	
   409  06FC                     l36:	
   410                           ;Source Code PR6B.c: 70: while (RCIF == 0);
   411                           
   412                           ;incstack = 0
   413                           ; Regs used in _receive: [wreg]
   414                           
   415  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   416  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   417  06FE  1E8C               	btfss	12,5	;volatile
   418  06FF  2EFC               	goto	l36
   419                           
   420                           ;Source Code PR6B.c: 71: a = RCREG;
   421  0700  081A               	movf	26,w	;volatile
   422  0701  00F0               	movwf	??_receive
   423  0702  0870               	movf	??_receive,w
   424  0703  00F2               	movwf	_a
   425                           
   426                           ;Source Code PR6B.c: 72: return a;
   427  0704  0872               	movf	_a,w
   428  0705  0008               	return
   429  0706                     __end_of_receive:	
   430                           
   431                           	psect	text2
   432  0706                     __ptext2:	
   433 ;; *************** function _init *****************
   434 ;; Defined at:
   435 ;;		line 51 in file "../../Source file/Source Code PR6B.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;		None               void
   442 ;; Registers used:
   443 ;;		wreg, status,2
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _init
   464  0706                     _init:	
   465                           
   466                           ;Source Code PR6B.c: 53: SPBRG=0x0A;
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _init: [wreg+status,2]
   470  0706  300A               	movlw	10
   471  0707  1683               	bsf	3,5	;RP0=1, select bank1
   472  0708  1303               	bcf	3,6	;RP1=0, select bank1
   473  0709  0099               	movwf	25	;volatile
   474                           
   475                           ;Source Code PR6B.c: 54: BRGH=1;
   476  070A  1518               	bsf	24,2	;volatile
   477                           
   478                           ;Source Code PR6B.c: 55: TXEN=1;
   479  070B  1698               	bsf	24,5	;volatile
   480                           
   481                           ;Source Code PR6B.c: 56: CREN=1;
   482  070C  1283               	bcf	3,5	;RP0=0, select bank0
   483  070D  1303               	bcf	3,6	;RP1=0, select bank0
   484  070E  1618               	bsf	24,4	;volatile
   485                           
   486                           ;Source Code PR6B.c: 57: SPEN=1;
   487  070F  1798               	bsf	24,7	;volatile
   488                           
   489                           ;Source Code PR6B.c: 58: TRISD = 0b00000000;
   490  0710  1683               	bsf	3,5	;RP0=1, select bank1
   491  0711  1303               	bcf	3,6	;RP1=0, select bank1
   492  0712  0188               	clrf	8	;volatile
   493                           
   494                           ;Source Code PR6B.c: 59: PORTD = 0b00000000;
   495  0713  1283               	bcf	3,5	;RP0=0, select bank0
   496  0714  1303               	bcf	3,6	;RP1=0, select bank0
   497  0715  0188               	clrf	8	;volatile
   498  0716  0008               	return
   499  0717                     __end_of_init:	
   500                           
   501                           	psect	text3
   502  06F4                     __ptext3:	
   503 ;; *************** function _display *****************
   504 ;; Defined at:
   505 ;;		line 62 in file "../../Source file/Source Code PR6B.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  c               1    wreg     unsigned char 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  c               1    0[COMMON] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;		None               void
   512 ;; Registers used:
   513 ;;		wreg
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         1       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0
   522 ;;      Totals:         1       0       0       0       0
   523 ;;Total ram usage:        1 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _display
   534  06F4                     _display:	
   535                           
   536                           ;incstack = 0
   537                           ; Regs used in _display: [wreg]
   538                           ;display@c stored from wreg
   539  06F4  00F0               	movwf	display@c
   540  06F5                     l30:	
   541                           ;Source Code PR6B.c: 64: while (TXIF == 0);
   542                           
   543  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   544  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   545  06F7  1E0C               	btfss	12,4	;volatile
   546  06F8  2EF5               	goto	l30
   547                           
   548                           ;Source Code PR6B.c: 65: TXREG = c;
   549  06F9  0870               	movf	display@c,w
   550  06FA  0099               	movwf	25	;volatile
   551  06FB  0008               	return
   552  06FC                     __end_of_display:	
   553  007E                     btemp	set	126	;btemp
   554  007E                     wtemp	set	126
   555  007E                     wtemp0	set	126
   556  0080                     wtemp1	set	128
   557  0082                     wtemp2	set	130
   558  0084                     wtemp3	set	132
   559  0086                     wtemp4	set	134
   560  0088                     wtemp5	set	136
   561  007F                     wtemp6	set	127
   562  007E                     ttemp	set	126
   563  007E                     ttemp0	set	126
   564  0081                     ttemp1	set	129
   565  0084                     ttemp2	set	132
   566  0087                     ttemp3	set	135
   567  007F                     ttemp4	set	127
   568  007E                     ltemp	set	126
   569  007E                     ltemp0	set	126
   570  0082                     ltemp1	set	130
   571  0086                     ltemp2	set	134
   572  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _main->_receive

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              1 COMMON     1     1      0
                            _display
                               _init
                            _receive
 ---------------------------------------------------------------------------------
 (1) _receive                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init
   _receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 21 16:54:19 2015

                      _a 0072              __CFG_CP$OFF 0000                       l30 06F5  
                     l36 06FC                      l553 07EA                      l555 07C6  
                    l539 071C                      l573 07F6             __CFG_CPD$OFF 0000  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _BRGH 04C2  
                   _CREN 00C4                     _RCIF 0065                     _SPEN 00C7  
                   _TXEN 04C5                     _TXIF 0064             __CFG_WRT$OFF 0000  
                   _main 0717                     _init 0706                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070                    ?_init 0070  
          __CFG_WDTE$OFF 0000           __CFG_DEBUG$OFF 0000                    _RCREG 001A  
                  _SPBRG 0099                    _PORTD 0008                    _TRISD 0088  
                  _TXREG 0019            __CFG_PWRTE$ON 0000          __end_of_display 06FC  
        __end_of_receive 0706           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC             __end_of_main 07FC  
           __end_of_init 0717                   ??_main 0071                   ??_init 0070  
              ??_display 0070                ??_receive 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pnvCOMMON 0072               __pmaintext 0717  
                __ptext1 06FC                  __ptext2 0706                  __ptext3 06F4  
                _display 06F4                  _receive 06FC     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                 ?_display 0070  
               ?_receive 0070         __size_of_display 0008         __size_of_receive 000A  
          __size_of_main 00E5            __size_of_init 0011                 display@c 0070  
